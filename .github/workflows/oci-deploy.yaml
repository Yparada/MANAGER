name: cicd-demo
on:
  push:
    branches:
      - 'master'

env:
  DOCKERHUB_REPOSITORY: ${{ github.repository }}
  MANAGER_DB_URL: ${{ secrets.MANAGER_DB_URL }}
  MANAGER_DB_USERNAME: ${{ secrets.MANAGER_DB_USERNAME }}
  MANAGER_DB_PASSWORD: ${{ secrets.MANAGER_DB_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Echo repository
        run: echo ${{ env.DOCKERHUB_REPOSITORY }}

      - name: 'Setup Java'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: Build with maven
        run: |
          mvn install

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ env.DOCKERHUB_REPOSITORY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
      - name: 'Wait for SSH'
        run: |
          while ! nc -w5 -z ${{ secrets.OCI_IP_TERCERA }} 22; do
                  sleep 5
                  echo "SSH not available..."
          done; echo "SSH ready!"

      - name: 'Pull and run container from DockerHub'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.OCI_IP_TERCERA }}
          username: ubuntu
          key: ${{ secrets.VM_SSH_PRIVATE_KEY_TERCERA }}
          script: |
            cd /home/ubuntu/docker-documets/manager-deploy
            sudo docker pull yparada/manager:latest
            sudo docker-compose down
            rm  docker-compose.yaml
            (echo "version: '3.3'"; 
            echo "services:";
            echo "  manager:";
            echo "    image: ${{ env.DOCKERHUB_REPOSITORY }}:latest" | tr '[:upper:]' '[:lower:]';
            echo "    container_name: manager-service";
            echo "    environment:";
            echo "            MANAGER_DB_PASSWORD: ${{ env.MANAGER_DB_PASSWORD }}";
            echo "            MANAGER_DB_URL: ${{ env.MANAGER_DB_URL }}";
            echo "            MANAGER_DB_USERNAME: ${{ env.MANAGER_DB_USERNAME }}";
            echo "    ports:";
            echo "            - 8080:8080";) >> docker-compose.yaml
            sudo docker-compose up -d
